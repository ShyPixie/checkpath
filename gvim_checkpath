#!/bin/bash
#
# Distributed under GPL-3, See: <http://www.gnu.org/licenses/gpl.html>
#
# Copyright (C) 2012~2014 Lara Maia <lara@craft.net.br>
#                         Fernando Manfredi <blackice@craft.net.br>
#
# VersÃ£o: 2.0

function user_not_found() {
    echo -e '\nConfiguration file not found.'
    echo -e 'It is need for access files with root permissions.\n'
    read -s -p "Write your password: " pass
    echo -e "user=$USER\npass=$pass" > ${HOME}/.config/$(basename $0).user
}

# Fix Paths with spaces
IFS=$(echo -en "\n\b")

USER_SOCKET="gvim --servername GVIM_CHECKPATH"
ROOT_SOCKET="gvim --servername GVIM_ROOT_CHECKPATH"

# Config
source ${HOME}/.config/$(basename $0).user >/dev/null 2>&1 || user_not_found

if [ `id -u` == 0 ]; then
    (gvim $@) &
    exit 0
fi

function root_open() {
# $1 = pass | $2 = file
(echo $1 | sudo -S -- bash -c eval\ "'$ROOT_SOCKET --remote-tab $2'")&>/dev/null
if [ $? != 0 ]; then
    echo -e "\nIncorrect password!\n"
    echo -e "Run again to fix this.\n"
    rm -f ${HOME}/.config/$(basename $0).user
    exit 1
fi
}

function check_server() {
    if [ "$1" == "root" ]; then
        pgrep -U root -fx $ROOT_SOCKET >/dev/null 2>&1
        if [ $? != 0 ]; then
            (echo $2 | sudo -S -- bash -c eval\ "'$ROOT_SOCKET'") &
        fi
    else
        pgrep -U $USER -fx $USER_SOCKET >/dev/null 2>&1
        if [ $? != 0 ]; then
            (eval $USER_SOCKET) &
        fi
    fi
    # wait server start
    while true; do
        if [ "$1" == "root" ]; then
            gvim --serverlist | grep ${ROOT_SOCKET:18} >/dev/null 2>&1
            ret=$?
        else
            gvim --serverlist | grep ${USER_SOCKET:18} >/dev/null 2>&1
            ret=$?
        fi

        if [ $ret == 0 ]; then break; fi
        sleep .5
    done
}

for file in ${@}; do
    if [ "${file:0:1}" == "/" ]; then

        test_file=${file%/*}
        test "$test_file" == "" && test_file="/"

        if [ "$(ls -l -d $test_file | awk '{print $3}')" == "root" ]; then
            check_server root $pass
            (root_open $pass "$file") &
        else
            check_server user
            (eval $USER_SOCKET --remote-tab "$file") &
        fi
    else
        if [ "$(ls -l -d `pwd`|awk '{print $3}')" == "root" ]; then
            check_server root $pass
            (root_open $pass "$file") &
        else
            check_server user
            (eval $USER_SOCKET --remote-tab "$file") &
        fi
    fi
    sleep .3
done

exit 0

